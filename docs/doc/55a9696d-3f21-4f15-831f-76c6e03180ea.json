{
    "summary": "The code consists of four functions, two for text processing and two for text highlighting. It performs post-processing on search results, potentially highlighting relevant keywords using the \"rich\" library and logs additional information if debug is enabled.",
    "details": [
        {
            "comment": "The code defines two functions, `englishTextToOriginalAndStemmedWordPairs` and `englishTextToStemmedWords`. The first function takes in a text, removes punctuation, stems each word using Porter Stemmer algorithm, and returns a list of tuples containing the original word and its stemmed form. The second function calls the first function to convert the input text into a list of stemmed words only.",
            "location": "\"/media/root/Toshiba XG3/works/lazero/docs/src/lazero/search/postprocessing.py\":0-27",
            "content": "# we offer highlight service here. are you sure it will show up in that line? without newline or anything? i mean in the file viewer, not the list view.\n# you decide not to remove stopwords?\n# it does not affect my highlighting process anyway.\n# the order matters!\nfrom lazero.search.preprocessing import getWordsWithoutPunctuation, porterStemmer\n# circular import? python does not work for this!\ndef englishTextToOriginalAndStemmedWordPairs(text):\n    global porterStemmer\n    doc = getWordsWithoutPunctuation(text)\n    # doc = englishNLP(text) # we just want splited words.\n    originalAndStemmedWordPairs = []\n    for original_word in doc:\n        # original_word = token.text\n        stemmed_word = porterStemmer.stem(original_word)\n        originalAndStemmedWordPairs.append((original_word, stemmed_word))\n    return originalAndStemmedWordPairs\ndef englishTextToStemmedWords(text):\n    originalAndStemmedWordPairs = englishTextToOriginalAndStemmedWordPairs(text)\n    stemmedWords = [\n        stemmed_word for original_word, stemmed_word in originalAndStemmedWordPairs"
        },
        {
            "comment": "This code defines two functions: `getHighlightSetFromQueryStemmedWordsAndAnswer` and `getHighlightedAnswerFromQueryStemmedWordsAndAnswer`. The first function takes query stemmed words and an answer as input, and returns a set of original words from the answer that match any of the query stemmed words. The second function performs similar operations but also returns the highlighted answer if the `debug` parameter is set to True. Both functions are related to text processing and highlighting relevant parts of the answer based on query stemmed words.",
            "location": "\"/media/root/Toshiba XG3/works/lazero/docs/src/lazero/search/postprocessing.py\":28-56",
            "content": "    ]\n    return stemmedWords\n# it needs 'query'\n# do it in batch or do it in series.\n# query =\n# answers =\n# queryStemmedWords = englishTextToStemmedWords(query) # we use this as input, not the query itself.\n# named as such, but this process is universal, not just for english.\n# maybe we don't have to invent this shit again.\ndef getHighlightSetFromQueryStemmedWordsAndAnswer(queryStemmedWords, answer):\n    highlightSet = set()\n    answerOriginalAndStemmedWordPairs = englishTextToOriginalAndStemmedWordPairs(answer)\n    for original_word, stemmed_word in answerOriginalAndStemmedWordPairs:\n        if stemmed_word in queryStemmedWords:\n            highlightSet.add(\n                original_word\n            )  # just original_word is enough. remember to deduplicate.\n    return highlightSet\ndef getHighlightedAnswerFromQueryStemmedWordsAndAnswer(\n    queryStemmedWords, answer, debug=False\n):\n    # parse and stem both query and answer, check for commondities.\n    # sentence -> [(original_word, stemmed_word), ...]\n    # we need to show these highlights! fuck."
        },
        {
            "comment": "This code performs post-processing on search results, potentially highlighting relevant keywords in the answer and displaying it using the \"rich\" library. If debug is enabled, it logs additional information for troubleshooting.",
            "location": "\"/media/root/Toshiba XG3/works/lazero/docs/src/lazero/search/postprocessing.py\":57-78",
            "content": "    if debug:\n        from lazero.utils.logger import sprint\n        # sprint(\"QUERY:\", query)\n        sprint(\"QUERY KEYWORDS STEMMED:\", queryStemmedWords)\n    from rich.text import Text\n    text = Text(answer,style='white')\n    # text = Text(answer, style=\"gray\")  # there is no style applied.\n    highlightSet = getHighlightSetFromQueryStemmedWordsAndAnswer(\n        queryStemmedWords, answer\n    )\n    text.highlight_words(\n        highlightSet, style=\"yellow\"\n    )  # but we should not highlight individual letters right?\n    if debug:\n        from rich.console import Console\n        console = Console()\n        console.print(text)\n    return text"
        }
    ]
}